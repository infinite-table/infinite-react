name: 'Run Esbuild'

on:
  push:
    paths:
      - 'source/src/**'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  # Install & caches "fresh" node_modules
  npm-install:
    name: Install npm deps
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            source/package-lock.json

      - name: Cache node_modules for root
        id: cache-node-modules-root
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-root-${{ github.run_id }}

      - name: Cache node_modules for source
        id: cache-node-modules-source
        uses: actions/cache@v3
        with:
          path: source/node_modules
          key: node-modules-source-${{ github.run_id }}
      - name: Execute 'npm ci' in monorepo
        run: npm ci

  esbuild:
    needs: npm-install
    name: Run esbuild
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Load cached node_modules for root
        id: cache-node-modules-root
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-root-${{ github.run_id }}

      - name: Load cached node_modules for source
        id: cache-node-modules-source
        uses: actions/cache@v3
        with:
          path: source/node_modules
          key: node-modules-source-${{ github.run_id }}

      - name: Esbuild compile
        run: npm run esbuild
        working-directory: source

name: RELEASE

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    paths-ignore:
      - 'www/**'
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_BASE_URL: https://infinite-table.com/.netlify/functions/json-server

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: './.github/actions/will-release-check'
        env:
          NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}

      - name: Echo whoami on public npm registry
        run: npm whoami

      - name: Echo publish cmd
        run: echo $WILL_RELEASE_CMD

      - name: Set git config
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "SHIP IT"

      - name: Install
        run: npm ci --force

      # - name: Linting
      #   run: npm run lint
      #   working-directory: source

      - name: Update TOC in markdown files
        run: npm run doctoc

      - name: Bump version
        working-directory: source
        run: npm run bump:${WILL_RELEASE_VERSION}

      - name: Building
        run: npm run build

      - name: copy .npmrc
        run: cp .npmrc source && cp .npmrc source/dist

      - name: Run test suite
        run: npm test

      - name: Ship it
        uses: './.github/actions/execute-cmd'
        with:
          cmd_to_execute: $WILL_RELEASE_CMD

      - run: git diff
      - run: cat package.json
        working-directory: source

      - name: Push changes
        uses: './.github/actions/git-push-action'
        with:
          branch: master
          github_token: ${{ secrets.DEPLOY_GITHUB_TOKEN }}

      # - name: Send version to slack
      #   uses: "./.github/actions/send-version-to-slack"
      #   with:
      #     slack_webhook_notify: ${{ secrets.SLACK_WEBHOOK_NOTIFY }}
